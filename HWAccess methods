/***
 * Rotates the bot around a point on the axis of the wheels.
 * @param degrees the degrees of the rotation in degrees
 * @param distanceOnAxis the distance in cm from the center between the wheels, positive is to the right
 * @param speed the speed in %
 * @endcond rotation is done
 * @author Team Emily
 */
void rotate(float degrees, float distanceOnAxis, float speed);
/***
 * Rotates the bot around a point on the axis of the wheels at 50% speed.
 * @param degrees the degrees of the rotation in degrees
 * @param distanceOnAxis the distance from the center between the wheels, positive is to the right
 * @endcond rotation is done
 * @author Team Emily
 */
void rotate(float degrees, float distanceOnAxis);
/***
 * Drives forward.
 * @param distance the distance in cm to drive.
 * @param speed the speed in %
 * @endcond driving is done
 * @author Team Emily
 */
void drive(float distance, float speed);
/***
 * Drives forward at 50% speed.
 * @param distance the distance in cm to drive.
 * @endcond driving is done
 * @author Team Emily
 */
void drive(float distance);
/***
 * Moves the paddle to a target position.
 * @param degrees the degrees of rotation in degrees relative to the back position
 * @author Team Emily
 */
void movePaddle(float degrees);
/***
 * Moves the paddle by a specific amount.
 * @param degrees the degrees of rotation in degrees to move the paddle by
 */
void movePaddleRel(float degrees);
/***
 * Measures forward distance.
 * @return the distance to the next obstacle in front of the robot.
 * @author Team Emily
 */
void resetPaddle();
/**
 * Moves paddle to 0 point
 */
float forwardDistance();
/***
 * Measures left distance.
 * @return the distance to the next obstacle on the left of the robot.
 * @author Team Emily
 */
float leftDistance();
/***
 * Measures right distance.
 * @return the distance to the next obstacle on the right of the robot.
 * @author Team Emily
 */
float rightDistance();
/***
 * Measures downward distance.
 * @return the distance to the next obstacle under the robot.
 * @author Team Emily
 */
float downDistance();


//----- section : start methods

void startFootball();

void startSlalom();

void startGolf();